/*
 * generated by Xtext
 */
package avroclipse.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import avroclipse.services.AvdlGrammarAccess;

public class AvdlParser extends AbstractContentAssistParser {
	
	@Inject
	private AvdlGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected avroclipse.ui.contentassist.antlr.internal.InternalAvdlParser createParser() {
		avroclipse.ui.contentassist.antlr.internal.InternalAvdlParser result = new avroclipse.ui.contentassist.antlr.internal.InternalAvdlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAvdlFileAccess().getAlternatives(), "rule__AvdlFile__Alternatives");
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getReturnTypeLinkAccess().getAlternatives(), "rule__ReturnTypeLink__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getFieldTypeAccess().getAlternatives(), "rule__FieldType__Alternatives");
					put(grammarAccess.getTypeLinkAccess().getAlternatives(), "rule__TypeLink__Alternatives");
					put(grammarAccess.getPrimativeTypeLinkAccess().getTargetAlternatives_0(), "rule__PrimativeTypeLink__TargetAlternatives_0");
					put(grammarAccess.getValuesAccess().getAlternatives_1(), "rule__Values__Alternatives_1");
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getIntValueAccess().getValAlternatives_0(), "rule__IntValue__ValAlternatives_0");
					put(grammarAccess.getEscapableIdAccess().getAlternatives(), "rule__EscapableId__Alternatives");
					put(grammarAccess.getReservedKeyWordsAccess().getAlternatives(), "rule__ReservedKeyWords__Alternatives");
					put(grammarAccess.getImportTypeAccess().getAlternatives(), "rule__ImportType__Alternatives");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getProtocolAccess().getGroup(), "rule__Protocol__Group__0");
					put(grammarAccess.getRPCMessageAccess().getGroup(), "rule__RPCMessage__Group__0");
					put(grammarAccess.getRPCMessageAccess().getGroup_3(), "rule__RPCMessage__Group_3__0");
					put(grammarAccess.getRPCMessageAccess().getGroup_3_1(), "rule__RPCMessage__Group_3_1__0");
					put(grammarAccess.getRPCMessageAccess().getGroup_5(), "rule__RPCMessage__Group_5__0");
					put(grammarAccess.getArgumentAccess().getGroup(), "rule__Argument__Group__0");
					put(grammarAccess.getArgumentAccess().getGroup_2(), "rule__Argument__Group_2__0");
					put(grammarAccess.getTypeDefAccess().getGroup(), "rule__TypeDef__Group__0");
					put(grammarAccess.getErrorTypeAccess().getGroup(), "rule__ErrorType__Group__0");
					put(grammarAccess.getRecordTypeAccess().getGroup(), "rule__RecordType__Group__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getFieldAccess().getGroup_4(), "rule__Field__Group_4__0");
					put(grammarAccess.getUnionFieldTypeAccess().getGroup(), "rule__UnionFieldType__Group__0");
					put(grammarAccess.getUnionFieldTypeAccess().getGroup_3(), "rule__UnionFieldType__Group_3__0");
					put(grammarAccess.getArrayFieldTypeAccess().getGroup(), "rule__ArrayFieldType__Group__0");
					put(grammarAccess.getMapFieldTypeAccess().getGroup(), "rule__MapFieldType__Group__0");
					put(grammarAccess.getFixedTypeAccess().getGroup(), "rule__FixedType__Group__0");
					put(grammarAccess.getEnumTypeAccess().getGroup(), "rule__EnumType__Group__0");
					put(grammarAccess.getEnumTypeAccess().getGroup_4(), "rule__EnumType__Group_4__0");
					put(grammarAccess.getAnnotationAccess().getGroup(), "rule__Annotation__Group__0");
					put(grammarAccess.getAnnotationAccess().getGroup_1(), "rule__Annotation__Group_1__0");
					put(grammarAccess.getValuesAccess().getGroup(), "rule__Values__Group__0");
					put(grammarAccess.getValuesAccess().getGroup_1_1(), "rule__Values__Group_1_1__0");
					put(grammarAccess.getValuesAccess().getGroup_1_1_1(), "rule__Values__Group_1_1_1__0");
					put(grammarAccess.getArrayAccess().getGroup(), "rule__Array__Group__0");
					put(grammarAccess.getEscapableIdAccess().getGroup_1(), "rule__EscapableId__Group_1__0");
					put(grammarAccess.getANAccess().getGroup(), "rule__AN__Group__0");
					put(grammarAccess.getANAccess().getGroup_2(), "rule__AN__Group_2__0");
					put(grammarAccess.getNegativeIntAccess().getGroup(), "rule__NegativeInt__Group__0");
					put(grammarAccess.getAvdlFileAccess().getImportsAssignment_0(), "rule__AvdlFile__ImportsAssignment_0");
					put(grammarAccess.getAvdlFileAccess().getProtocolsAssignment_1(), "rule__AvdlFile__ProtocolsAssignment_1");
					put(grammarAccess.getImportAccess().getTypeAssignment_1(), "rule__Import__TypeAssignment_1");
					put(grammarAccess.getImportAccess().getImportUriAssignment_2(), "rule__Import__ImportUriAssignment_2");
					put(grammarAccess.getProtocolAccess().getAnnotationsAssignment_0(), "rule__Protocol__AnnotationsAssignment_0");
					put(grammarAccess.getProtocolAccess().getNameAssignment_2(), "rule__Protocol__NameAssignment_2");
					put(grammarAccess.getProtocolAccess().getElementsAssignment_4(), "rule__Protocol__ElementsAssignment_4");
					put(grammarAccess.getRPCMessageAccess().getReturnTypeAssignment_0(), "rule__RPCMessage__ReturnTypeAssignment_0");
					put(grammarAccess.getRPCMessageAccess().getNameAssignment_1(), "rule__RPCMessage__NameAssignment_1");
					put(grammarAccess.getRPCMessageAccess().getArgumentsAssignment_3_0(), "rule__RPCMessage__ArgumentsAssignment_3_0");
					put(grammarAccess.getRPCMessageAccess().getArgumentsAssignment_3_1_1(), "rule__RPCMessage__ArgumentsAssignment_3_1_1");
					put(grammarAccess.getRPCMessageAccess().getErrorAssignment_5_1(), "rule__RPCMessage__ErrorAssignment_5_1");
					put(grammarAccess.getRPCMessageAccess().getOnewayAssignment_6(), "rule__RPCMessage__OnewayAssignment_6");
					put(grammarAccess.getArgumentAccess().getTypeAssignment_0(), "rule__Argument__TypeAssignment_0");
					put(grammarAccess.getArgumentAccess().getNameAssignment_1(), "rule__Argument__NameAssignment_1");
					put(grammarAccess.getArgumentAccess().getDefaultAssignment_2_1(), "rule__Argument__DefaultAssignment_2_1");
					put(grammarAccess.getVoidTypeLinkAccess().getTargetAssignment(), "rule__VoidTypeLink__TargetAssignment");
					put(grammarAccess.getTypeDefAccess().getAnnotationsAssignment_0(), "rule__TypeDef__AnnotationsAssignment_0");
					put(grammarAccess.getTypeDefAccess().getTypeAssignment_1(), "rule__TypeDef__TypeAssignment_1");
					put(grammarAccess.getErrorTypeAccess().getNameAssignment_1(), "rule__ErrorType__NameAssignment_1");
					put(grammarAccess.getErrorTypeAccess().getFieldsAssignment_3(), "rule__ErrorType__FieldsAssignment_3");
					put(grammarAccess.getRecordTypeAccess().getNameAssignment_1(), "rule__RecordType__NameAssignment_1");
					put(grammarAccess.getRecordTypeAccess().getFieldsAssignment_3(), "rule__RecordType__FieldsAssignment_3");
					put(grammarAccess.getFieldAccess().getAnnotationsAssignment_0(), "rule__Field__AnnotationsAssignment_0");
					put(grammarAccess.getFieldAccess().getTypeAssignment_1(), "rule__Field__TypeAssignment_1");
					put(grammarAccess.getFieldAccess().getNameAnnotationsAssignment_2(), "rule__Field__NameAnnotationsAssignment_2");
					put(grammarAccess.getFieldAccess().getNameAssignment_3(), "rule__Field__NameAssignment_3");
					put(grammarAccess.getFieldAccess().getDefaultAssignment_4_1(), "rule__Field__DefaultAssignment_4_1");
					put(grammarAccess.getSimpleFieldTypeAccess().getTypeAssignment(), "rule__SimpleFieldType__TypeAssignment");
					put(grammarAccess.getUnionFieldTypeAccess().getTypesAssignment_2(), "rule__UnionFieldType__TypesAssignment_2");
					put(grammarAccess.getUnionFieldTypeAccess().getTypesAssignment_3_1(), "rule__UnionFieldType__TypesAssignment_3_1");
					put(grammarAccess.getArrayFieldTypeAccess().getAnnotationAssignment_2(), "rule__ArrayFieldType__AnnotationAssignment_2");
					put(grammarAccess.getArrayFieldTypeAccess().getTypeAssignment_3(), "rule__ArrayFieldType__TypeAssignment_3");
					put(grammarAccess.getMapFieldTypeAccess().getAnnotationAssignment_2(), "rule__MapFieldType__AnnotationAssignment_2");
					put(grammarAccess.getMapFieldTypeAccess().getTypeAssignment_3(), "rule__MapFieldType__TypeAssignment_3");
					put(grammarAccess.getPrimativeTypeLinkAccess().getTargetAssignment(), "rule__PrimativeTypeLink__TargetAssignment");
					put(grammarAccess.getCustomTypeLinkAccess().getTargetAssignment(), "rule__CustomTypeLink__TargetAssignment");
					put(grammarAccess.getFixedTypeAccess().getNameAssignment_1(), "rule__FixedType__NameAssignment_1");
					put(grammarAccess.getFixedTypeAccess().getSizeAssignment_3(), "rule__FixedType__SizeAssignment_3");
					put(grammarAccess.getEnumTypeAccess().getNameAssignment_1(), "rule__EnumType__NameAssignment_1");
					put(grammarAccess.getEnumTypeAccess().getLiteralsAssignment_3(), "rule__EnumType__LiteralsAssignment_3");
					put(grammarAccess.getEnumTypeAccess().getLiteralsAssignment_4_1(), "rule__EnumType__LiteralsAssignment_4_1");
					put(grammarAccess.getAnnotationAccess().getNameAssignment_0(), "rule__Annotation__NameAssignment_0");
					put(grammarAccess.getAnnotationAccess().getValuesAssignment_1_1(), "rule__Annotation__ValuesAssignment_1_1");
					put(grammarAccess.getValuesAccess().getValueAssignment_1_0(), "rule__Values__ValueAssignment_1_0");
					put(grammarAccess.getValuesAccess().getValueAssignment_1_1_0(), "rule__Values__ValueAssignment_1_1_0");
					put(grammarAccess.getValuesAccess().getValueAssignment_1_1_1_1(), "rule__Values__ValueAssignment_1_1_1_1");
					put(grammarAccess.getArrayAccess().getValuesAssignment_1(), "rule__Array__ValuesAssignment_1");
					put(grammarAccess.getNullAccess().getValAssignment(), "rule__Null__ValAssignment");
					put(grammarAccess.getStringValueAccess().getValAssignment(), "rule__StringValue__ValAssignment");
					put(grammarAccess.getIntValueAccess().getValAssignment(), "rule__IntValue__ValAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			avroclipse.ui.contentassist.antlr.internal.InternalAvdlParser typedParser = (avroclipse.ui.contentassist.antlr.internal.InternalAvdlParser) parser;
			typedParser.entryRuleAvdlFile();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AvdlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AvdlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
